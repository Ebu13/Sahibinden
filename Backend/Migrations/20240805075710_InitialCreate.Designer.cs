// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(SahibindenContext))]
    [Migration("20240805075710_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("car_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("photoPath");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("CarId")
                        .HasName("PK__Cars__4C9A0DB3759964D0");

                    b.HasIndex(new[] { "MenuId" }, "IX_Cars_menu_id");

                    b.HasIndex(new[] { "UserId" }, "IX_Cars_user_id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Backend.Models.Home", b =>
                {
                    b.Property<int>("HomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("home_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("location");

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("photoPath");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int>("Size")
                        .HasColumnType("int")
                        .HasColumnName("size");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("HomeId")
                        .HasName("PK__Homes__8ED7E2137B8363FF");

                    b.HasIndex(new[] { "MenuId" }, "IX_Homes_menu_id");

                    b.HasIndex(new[] { "UserId" }, "IX_Homes_user_id");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("Backend.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<string>("Amblem")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("amblem");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.HasKey("MenuId")
                        .HasName("PK__Menu__4CA0FADC3E077BAA");

                    b.HasIndex(new[] { "ParentId" }, "IX_Menu_parent_id");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("Backend.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("product_type");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__4659622964ACD4C3");

                    b.HasIndex("MenuId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370FDD334116");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Backend.Models.Car", b =>
                {
                    b.HasOne("Backend.Models.Menu", "Menu")
                        .WithMany("Cars")
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK__Cars__menu_id__3D5E1FD2");

                    b.HasOne("Backend.Models.User", "User")
                        .WithMany("Cars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Cars__user_id__3C69FB99");

                    b.Navigation("Menu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Models.Home", b =>
                {
                    b.HasOne("Backend.Models.Menu", "Menu")
                        .WithMany("Homes")
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK__Homes__menu_id__412EB0B6");

                    b.HasOne("Backend.Models.User", "User")
                        .WithMany("Homes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Homes__user_id__403A8C7D");

                    b.Navigation("Menu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Models.Menu", b =>
                {
                    b.HasOne("Backend.Models.Menu", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK__Menu__parent_id__398D8EEE");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Backend.Models.Order", b =>
                {
                    b.HasOne("Backend.Models.Menu", "Menu")
                        .WithMany("Orders")
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__menu_id__70DDC3D8");

                    b.HasOne("Backend.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Orders__user_id__6FE99F9F");

                    b.Navigation("Menu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Models.Menu", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Homes");

                    b.Navigation("InverseParent");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Homes");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
